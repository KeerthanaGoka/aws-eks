#terraform

#EKS & istio

terraform init
terraform apply --auto-approve

kubectl apply -f manifests\karpenter.yaml
kubectl rollout restart deployment istio-ingress -n istio-ingress



#Observability

for ADDON in kiali jaeger prometheus grafana
do
    ADDON_URL="https://raw.githubusercontent.com/istio/istio/release-1.20/samples/addons/$ADDON.yaml"
    kubectl apply --server-side -f $ADDON_URL
done

# Visualize Istio Mesh console using Kiali
kubectl port-forward svc/kiali 20001:20001 -n istio-system

# Get to the Prometheus UI
kubectl port-forward svc/prometheus 9090:9090 -n istio-system

# Visualize metrics in using Grafana
kubectl port-forward svc/grafana 3000:3000 -n istio-system
http://localhost:3000

    
# Visualize application traces via Jaeger
kubectl port-forward svc/jaeger 16686:16686 -n istio-system


#Istio sidecar injection

kubectl label namespace default istio-injection=enabled

#ArgoCD

helm repo add argo https://argoproj.github.io/argo-helm
helm repo update
helm install argocd argo/argo-cd -n argocd --create-namespace

http://localhost:8080
kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d

admin
9gn4GV-mvJhBpJPP

kubectl apply -f argocd/shopping-application.yaml


#Microservices deploy:

git clone https://github.com/aws-samples/istio-on-eks.git
cp -r istio-on-eks/modules/01-getting-started microservices-chart

helm install mesh-basic ./microservices-chart -n default 


#destroy

terraform destroy -target='module.eks_blueprints_addons.helm_release.this["istio-ingress"]' -auto-approve

#Patch the deployment directly and add the missing toleration
kubectl patch deployment aws-load-balancer-controller \
  -n kube-system \
  --type='json' \
  -p='[
    {
      "op": "add",
      "path": "/spec/template/spec/tolerations",
      "value": [
        {
          "key": "karpenter.sh/controller",
          "operator": "Equal",
          "value": "true",
          "effect": "NoSchedule"
        }
      ]
    }
  ]'

# Add toleration to istio-system components
for DEPLOY in istiod grafana jaeger kiali prometheus; do
  kubectl -n istio-system patch deployment $DEPLOY \
    --type='json' \
    -p='[
      {
        "op": "add",
        "path": "/spec/template/spec/tolerations",
        "value": [
          {
            "key": "karpenter.sh/controller",
            "operator": "Equal",
            "value": "true",
            "effect": "NoSchedule"
          }
        ]
      }
    ]'
done

# Add toleration to istio-ingress component
kubectl -n istio-ingress patch deployment istio-ingress \
  --type='json' \
  -p='[
    {
      "op": "add",
      "path": "/spec/template/spec/tolerations",
      "value": [
        {
          "key": "karpenter.sh/controller",
          "operator": "Equal",
          "value": "true",
          "effect": "NoSchedule"
        }
      ]
    }
  ]'


kubectl taint nodes ip-10-0-0-71.ec2.internal karpenter.sh/controller:NoSchedule-
kubectl taint nodes ip-10-0-19-115.ec2.internal karpenter.sh/controller:NoSchedule-
